<!doctype html>
<html class="no-js" lang="fr">
  <head>
    <meta charset="utf-8" />
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>event page</title>
    <!-- Foundation -->
    <link rel="stylesheet" href="/stylesheets/foundation.css" />
    <link href="/stylesheets/ol.css" rel="stylesheet">

    <!-- map css -->
    <link rel="stylesheet" href="/stylesheets/map.css" />


    <!-- Font Foundation -->
    <link href="/foundation-icons/foundation-icons.css" rel="stylesheet">
    <!-- JQuery -->
    <script src="js/vendor/jquery.js"></script>

    <script src="js/ol/mult-map.js"></script>
    <script src="js/ol/ol-debug.js"></script>
  </head>
  <body>

    <div class="off-canvas position-left" id="offCanvas" data-off-canvas>
      <% if(user) { %> 
        <%- include partials/menu_log.ejs %> 
      <% } else { %>
        <%- include partials/menu.ejs %>
      <% } %>
    </div>      
    
    <div class="off-canvas-content" data-off-canvas-content>
    <!-- Contenu de la page -->
      <div class="title-bar">
        <div class="title-bar-left">
          <button class="menu-icon" type="button" data-open="offCanvas"></button>
          <span class="title-bar-title">Menu</span>
        </div>
        <div class="title-bar-title" style="position: absolute; left: 44%;">
          <span class="title-bar-title">Page d'évènement</span>
        </div>
        <div class="title-bar-right">
          <span class="title-bar-title"> <% if(user) { %> Connecté en tant que <%= user %> <% } %></span>
        </div>
      </div>

      <div class="row">
      	<div class="columns large-4 medium-4">
      		<div class="row">

            <!-- remplacer par flyer -->
      			<div style="background: url(' /images/rectangle-1.jpg '); background-size: cover; background-position: center; height: 30vh; text-align: center; display: flex; align-items: center; justify-content: center;">
              
      			</div>	
      		</div>
      		
      	</div>

      	<div class="columns large-8 medium-8">

      		<div class="row">
      			<div class="columns large-10 medium-10 small-10" style="text-align: center;">
      				<h3> Tout les futurs événements </h3>
      			</div>
            <div class="columns large-2 medium-2 small-2">
              <a class="button fi-pencil" href="#"></a>
            </div>
      		</div>

      		<div class="row">
      			<div class="columns large-6 medium-6">
      				<a href="/organisme"> Organisme </a>
      			</div>
      			<div class="columns large-6 medium-6">
      				Lieu 
      			</div>
      		</div>
      		<div class="row">
            <div class="columns large-4 medium-4 small-4">
              <i class="fi-wheelchair"></i>
              <i class="fi-male-female"></i>
              <i class="fi-rss"></i>
            </div>
      			<div class="columns large-4 medium-4 small-4">
      				Date 
      			</div>
      			<div class="columns large-4 medium-4 small-4">
      				heure
      			</div>
      		</div>
      		<div class="row">
      			<div class="column">
      				Lorsque l'on organise un évènement, il faut faire passer un message clair à propos des activités ou en général de l'information sur le déroulement. il vaut mieux prévenir au maximum !
      			</div>
      		</div>
      	</div>

      </div>

      <!-- CONTENANT DE LA MAPS -->
      <div id="map">
        <button id="geolocation">Géolocalisation</button>
        <div id="popup" class="ol-popup"></div>
      </div>

  	  <script>
 /*
        var distance = 40;

        // query db to get all events then store in array
        var features = [];    
        $.getJSON("/evenement/all", function(external) {
          var output = "";
          $.each(external, function(i, result) {
            var pos = ol.proj.fromLonLat([result.longitude, result.latitude]);
            console.log(pos);
            
            features[i] = new ol.Feature(new ol.geom.Point(pos));
          });
          init();
        });

        function init(){
          var source = new ol.source.Vector({
            features: features
          });

          var clusterSource = new ol.source.Cluster({
            distance: distance,
            source: source
          });

          var styleCache = {};
          var clusters = new ol.layer.Vector({
            source: clusterSource,
            style: function(feature) {
              var size = feature.get('features').length;
              var style = styleCache[size];
              if (!style) {
                style = new ol.style.Style({
                  image: new ol.style.Circle({
                    radius: 10,
                    stroke: new ol.style.Stroke({
                      color: '#fff'
                    }),
                    fill: new ol.style.Fill({
                      color: '#3399CC'
                    })
                  }),
                  text: new ol.style.Text({
                    text: size.toString(),
                    fill: new ol.style.Fill({
                      color: '#fff'
                    })
                  })
                });
                styleCache[size] = style;
              }
              return style;
            }
          });

          var raster = new ol.layer.Tile({
            source: new ol.source.OSM()
          });

          var map = new ol.Map({
            layers: [raster, clusters],
            target: 'map',
            view: new ol.View({
              center: [0, 0],
              zoom: 2
            })
          });
        }


       
  	  	// http://harrywood.co.uk/maps/examples/openlayers/marker-array.view.html

        // create map 
        map = new OpenLayers.Map("map",{projection:"EPSG:3857"});

        var osm = new OpenLayers.Layer.OSM();

        // transform coordinates to map coord
        var toMercator = OpenLayers.Projection.transforms['EPSG:4326']['EPSG:3857'];
        var center = toMercator({x:-52.300900,y:4.931609});
        
        // query db to get all events then store in array
        var features = [];    
        $.getJSON("/evenement/all", function(external) {
          var output = "";
          $.each(external, function(i, result) {
            
            features[i] = new OpenLayers.Feature.Vector(
                    toMercator(new OpenLayers.Geometry.Point(
                        result.longitude,
                        result.latitude )), 
                    {
                      user: result.user,
                      name: result.name,
                      date: result.name,
                      heure: result.heure,
                      address: result.address 
                    }, {
                        fillColor : '#008040',
                        fillOpacity : 0.8,                    
                        strokeColor : "#ee9900",
                        strokeOpacity : 1,
                        strokeWidth : 1,
                        pointRadius : 8
                    });
          });
          diplayMap()

        });


        console.log(features);
            
        function diplayMap(){
          // create the layer with listeners to create and destroy popups
          var vector = new OpenLayers.Layer.Vector("Points",{
            eventListeners:{
                'featureselected':function(evt){
                    var feature = evt.feature;
                    var popup = new OpenLayers.Popup.FramedCloud("popup",
                        OpenLayers.LonLat.fromString(feature.geometry.toShortString()),
                        null,
                        "<div style='font-size:.8em'>"+

                           "<font size=\"4\">" + feature.attributes.name +"</font>"+
                          "<br>Createur: <a href=\"/users/"+feature.attributes.user+"\"> "+ feature.attributes.user+" </a>"+
                        "</div>",
                        null,
                        true
                    );
                    feature.popup = popup;
                    map.addPopup(popup);
                },
                'featureunselected':function(evt){
                    var feature = evt.feature;
                    map.removePopup(feature.popup);
                    feature.popup.destroy();
                    feature.popup = null;
                }
            }
          });
          vector.addFeatures(features);

          // create the select feature control
          var selector = new OpenLayers.Control.SelectFeature(vector,{
              clickout:true,
              autoActivate:true
          }); 
          
          map.addLayers([osm, vector]);
          map.addControl(selector);
          map.setCenter(new OpenLayers.LonLat(center.x,center.y), 13);
        }


*/
        

/*


        var markers = new OpenLayers.Layer.Markers( "Markers" );

        map = new OpenLayers.Map("mapdiv");
        map.addLayer(markers);
        map.addLayer(new OpenLayers.Layer.OSM());
        
        epsg4326 =  new OpenLayers.Projection("EPSG:4326"); //WGS 1984 projection
        projectTo = map.getProjectionObject(); //The map projection (Spherical Mercator)
       
        var lonlat = new OpenLayers.LonLat(  -52.300900, 4.931609).transform(epsg4326, projectTo);
        
        // 




  
        // TODO query db to display event data on marker click
        
        // center on last event displayed
        var zoom=14;
        map.setCenter(lonlat, zoom);



*/
        



  		  //end  
  	  </script>

    </div> <!-- of canvas content -->
    <script src="/js/foundation.min.js"></script>
    
    <script>
      $(document).foundation();
    </script>

  </body>
</html>
